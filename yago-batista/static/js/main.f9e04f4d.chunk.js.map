{"version":3,"sources":["ModalNewData.js","App.js","reportWebVitals.js","index.js"],"names":["ModalNewData","data","setData","useState","isModalVisible","setIsModalVisible","Form","useForm","form","result","setResult","type","onClick","PlusOutlined","title","visible","onOk","getFieldsValue","local","cheio","item","find","name","newData","filter","status","Status","CHEIO","VAZIO","onCancel","Item","label","style","width","onSearch","value","toLowerCase","indexOf","placeholder","map","index","Option","valuePropName","badge","Types","defaultData","img","time","props","App","className","placeHolder","onChange","target","margin","extra","text","src","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f9e04f4d.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { Modal, Button, Form, Checkbox, AutoComplete } from 'antd';\nimport { PlusOutlined } from '@ant-design/icons'\nimport { Status } from './App';\nexport const ModalNewData = ({ data, setData }) => {\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [form] = Form.useForm();\n\n  const showModal = () => {\n    setIsModalVisible(true);\n  };\n\n  const handleOk = () => {\n    const { local, cheio } = form.getFieldsValue()\n    const item =  data.find(({name}) => name ===local)\n    const newData = data.filter(({name}) => name !== local)\n    item.status = cheio ? Status.CHEIO : Status.VAZIO\n   \n    debugger;\n    setData([...newData, item])\n    setIsModalVisible(false);\n  };\n\n  const handleCancel = () => {\n    setIsModalVisible(false);\n  };\n\n  const [result, setResult] = useState([]);\n\n  const handleSearch = (value) => {\n    debugger;\n    setResult(data?.filter(({ name }) => {\n      return name.toLowerCase().indexOf(value.toLowerCase()) > -1\n    }));\n  };\n  return (\n    <>\n      <Button type=\"primary\" onClick={showModal}>\n        <PlusOutlined />\n      </Button>\n      <Modal title=\"Como está o local?\" visible={isModalVisible} onOk={handleOk} onCancel={handleCancel}>\n\n\n        <Form\n          form={form}\n          name=\"basic\"\n        >\n          <Form.Item\n            label=\"Local\"\n            name=\"local\"\n          >\n\n\n            <AutoComplete\n              style={{\n                width: 200,\n              }}\n              onSearch={handleSearch}\n              placeholder=\"Buscar local\"\n            >\n              {result.map(({ name, type }, index) => (\n                <AutoComplete.Option key={index} value={name}>\n                  {type} - {name}\n                </AutoComplete.Option>\n              ))}\n            </AutoComplete>\n          </Form.Item>\n\n          <Form.Item name=\"cheio\" valuePropName=\"checked\">\n            <Checkbox>Está Cheio?</Checkbox>\n          </Form.Item>\n\n\n        </Form>\n      </Modal>\n    </>\n  );\n};\n\n\n","import { Row, Card, Badge, Input } from 'antd';\nimport { useState } from 'react'\nimport 'antd/dist/antd.css';\nimport { ModalNewData } from './ModalNewData'\nimport './App.css'\n\nexport const Status = {\n  VAZIO: {\n    label: \"Vazio\",\n    badge: \"success\"\n  },\n  CHEIO: {\n    label: \"Cheio\",\n    badge: \"error\"\n  }\n}\n\nconst Types = {\n  POSTO: \"posto\",\n  HOSPITAL: \"hospital\",\n  CENTRO: \"centro\",\n}\n\nlet defaultData = [\n  {\n    img: \"http://culturaniteroi.com.br/blog/imagens/488_capa.jpg\",\n    name: \"campo de sao bento\",\n    type: Types.POSTO,\n    status: Status.VAZIO,\n    time: \"1h\",\n    props: [\"vacinacao\", \"Nao tem atendimento para covid\"]\n  },\n  {\n    img: \"https://www.radiodivinopolis.com.br/assets/uploads/imagens/thumbs/070a2-img_1327.jpg\",\n    name: \"Saúde de Niterói\",\n    type: Types.CENTRO,\n    status: Status.CHEIO,\n    time: \"2h\",\n    props: [\"vacinacao\", \"Nao tem atendimento para covid\"]\n  },\n  {\n    img: \"https://www.saudebusiness.com/sites/saudebusiness.com/files/styles/article_featured_retina/public/uploads/2020/06/hospital-icarai%CC%81-480x335.jpg?itok=4nq3_uQO\",\n    name: \"Icaraí\",\n    type: Types.HOSPITAL,\n    status: Status.VAZIO,\n    time: \"1h 30m\",\n    props: [\"vacinacao\", \"Atendimento para covid\"]\n  },\n  {\n    img: \"https://1.bp.blogspot.com/-fv5v0xIM_KE/XREbTlw9LEI/AAAAAAADLV8/kpNvYSgfpp0Xs_xLlTnNZxCU1XcuZLBCQCLcBGAs/s1600/IMG_4068.jpg\",\n    name: \"Fonseca\",\n    type: Types.HOSPITAL,\n    status: Status.CHEIO,\n    time: \"30m\",\n    props: [\"vacinacao\", \"Atendimento para covid\"]\n  },\n  {\n    img: \"https://media-exp1.licdn.com/dms/image/C4E0BAQE3AKwHdiQ4Bg/company-logo_200_200/0/1519871443501?e=1631750400&v=beta&t=pLkdxvRq-SfvfbxrN0lUug7f8cf2e_Lh369Y4wDo5BM\",\n    name: \"Niterói D'or\",\n    type: Types.HOSPITAL,\n    status: Status.CHEIO,\n    time: \"3h\",\n    props: [\"Atendimento para covid\"]\n  },\n\n]\n\n\n\nfunction App() {\n  const [data, setData] = useState(defaultData);\n  const [result, setResult] = useState(defaultData);\n\n  const handleSearch = ({ target: { value } }) => {\n    setResult(data?.filter(({ name }) => {\n      return name.toLowerCase().indexOf(value.toLowerCase()) > -1\n    }));\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Unilasalle - 2021.1 - CSCW-AV2 - Yago Batista da Silva - Matrícula 0050017826</h1>\n        <h2> O melhor posto</h2>\n        <p>\n          O objetivo do trabalho é criar uma aplicação de crowdsourcing em que os usuários compartilhem e consultem informações em tempo real sobre a covid-19, como por exemplos postos que estão realizando atendimento ou vacinação, como o posto/hospital estava na sua última consulta, tempo médio de consulta e etc.\n        </p>\n      </header>\n      <main>\n        <>\n          <Input\n            placeHolder=\"Busca\"\n            onChange={handleSearch}\n            style={{ width: \"50%\", margin: 10 }} />\n          <ModalNewData data={data} setData={setData}></ModalNewData>\n          <Row>\n            {result?.map(({ img, type, name, time, props, status: { label, badge } }) => (\n              <Card\n                title={`${type} - ${name}`}\n                extra={<Badge status={badge} text={label} />}\n                style={{ width: 300, margin: 10 }}\n              >\n                <img src={img} alt=\"blaba\" />\n                <span>tempos médio: {time}</span>\n                <ul>\n                  {props?.map(item => <li>{item}</li>)}\n                </ul>\n              </Card>\n            )\n            )}\n\n          </Row>\n        </>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}